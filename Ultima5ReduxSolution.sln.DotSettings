<wpf:ResourceDictionary xml:space="preserve" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:ss="urn:shemas-jetbrains-com:settings-storage-xaml" xmlns:wpf="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
	<s:String x:Key="/Default/CodeEditing/Unity/AdditionalFileLayout/Pattern/@EntryValue">&lt;Patterns
        xmlns:unity="urn:schemas-jetbrains-com:member-reordering-patterns-unity"
        xmlns="urn:schemas-jetbrains-com:member-reordering-patterns"&gt;
    &lt;!-- Pattern to match classes used by Unity that contain serialised fields and event
         function methods. Based on the standard "Default Pattern", this will also order
         event functions before normal methods, and does not reorder serialised fields,
         as this order is reflected in the Unity editor's Inspector --&gt;
    &lt;TypePattern DisplayName="Unity classes" Priority="100"&gt;
        &lt;TypePattern.Match&gt;
            &lt;unity:SerializableClass/&gt;
        &lt;/TypePattern.Match&gt;
        &lt;Entry DisplayName="Public Delegates" Priority="100"&gt;
            &lt;Entry.Match&gt;
                &lt;And&gt;
                    &lt;Access Is="Public"/&gt;
                    &lt;Kind Is="Delegate"/&gt;
                &lt;/And&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Name/&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Event Declarations"&gt;
            &lt;Entry.Match&gt;
                &lt;Kind Is="Event"/&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Access Order="Internal Private Public ProtectedInternal"/&gt;
                &lt;Static/&gt;
                &lt;Override/&gt;
                &lt;Abstract/&gt;
                &lt;Virtual/&gt;
                &lt;Sealed/&gt;
                &lt;Name/&gt;
                &lt;Type/&gt;
                &lt;Name/&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry Priority="100" DisplayName="Enums"&gt;
            &lt;Entry.Match&gt;
                &lt;And&gt;
                    &lt;Kind Is="Enum"/&gt;
                &lt;/And&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Access Order="Internal Private Public ProtectedInternal"/&gt;
                &lt;Name/&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Static Fields and Constants"&gt;
            &lt;Entry.Match&gt;
                &lt;Or&gt;
                    &lt;Kind Is="Constant"/&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Field"/&gt;
                        &lt;Static/&gt;
                    &lt;/And&gt;
                &lt;/Or&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Kind&gt;
                    &lt;Kind.Order&gt;
                        &lt;DeclarationKind&gt;Constant&lt;/DeclarationKind&gt;
                        &lt;DeclarationKind&gt;Field&lt;/DeclarationKind&gt;
                    &lt;/Kind.Order&gt;
                &lt;/Kind&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Serialized Fields"&gt;
            &lt;Entry.Match&gt;
                &lt;unity:SerializedField/&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Access Order="Internal Private Public ProtectedInternal"/&gt;
                &lt;Readonly/&gt;
                &lt;Static/&gt;
                &lt;Override/&gt;
                &lt;Abstract/&gt;
                &lt;Virtual/&gt;
                &lt;Sealed/&gt;
                &lt;Name/&gt;
            &lt;/Entry.SortBy&gt;
            &lt;!-- No sorting --&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Non-serialised Fields"&gt;
            &lt;Entry.Match&gt;
                &lt;And&gt;
                    &lt;Kind Is="Field"/&gt;
                    &lt;Not&gt;
                        &lt;unity:SerializedField/&gt;
                    &lt;/Not&gt;
                &lt;/And&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Access Order="Internal Private Public ProtectedInternal"/&gt;
                &lt;Readonly/&gt;
                &lt;Static/&gt;
                &lt;Override/&gt;
                &lt;Abstract/&gt;
                &lt;Virtual/&gt;
                &lt;Sealed/&gt;
                &lt;Name/&gt;
                &lt;Type/&gt;
                &lt;Name/&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Properties, Indexers"&gt;
            &lt;Entry.Match&gt;
                &lt;Or&gt;
                    &lt;Kind Is="Property"/&gt;
                    &lt;Kind Is="Indexer"/&gt;
                &lt;/Or&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Access Order="Internal Private Public ProtectedInternal"/&gt;
                &lt;Static/&gt;
                &lt;Override/&gt;
                &lt;Abstract/&gt;
                &lt;Virtual/&gt;
                &lt;Sealed/&gt;
                &lt;Name/&gt;
                &lt;Type/&gt;
                &lt;Name/&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Constructors"&gt;
            &lt;Entry.Match&gt;
                &lt;Kind Is="Constructor"/&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Access Order="Internal Private Public ProtectedInternal"/&gt;
                &lt;Static/&gt;
                &lt;Override/&gt;
                &lt;Abstract/&gt;
                &lt;Virtual/&gt;
                &lt;Sealed/&gt;
                &lt;Type/&gt;
                &lt;Name/&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Event Functions"&gt;
            &lt;Entry.Match&gt;
                &lt;unity:EventFunction/&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;!-- Prioritises common event functions. For alphabetical, replace with &lt;Name /&gt; --&gt;
                &lt;unity:EventFunctionName/&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Methods"&gt;
            &lt;Entry.Match&gt;
                &lt;Kind Is="Method"/&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Access Order="Internal Private Public ProtectedInternal"/&gt;
                &lt;Static/&gt;
                &lt;Override/&gt;
                &lt;Abstract/&gt;
                &lt;Virtual/&gt;
                &lt;Sealed/&gt;
                &lt;Name/&gt;
                &lt;Type/&gt;
                &lt;Name/&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Interface Implementations" Priority="100"&gt;
            &lt;Entry.Match&gt;
                &lt;And&gt;
                    &lt;Kind Is="Member"/&gt;
                    &lt;ImplementsInterface/&gt;
                &lt;/And&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;ImplementsInterface Immediate="true"/&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="All other members"/&gt;
        &lt;Entry DisplayName="Nested Types"&gt;
            &lt;Entry.Match&gt;
                &lt;Kind Is="Type"/&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Access Order="Internal Private Public ProtectedInternal"/&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
    &lt;/TypePattern&gt;
&lt;/Patterns&gt;
</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeCleanup/Profiles/=Brads_0020Cleanup/@EntryIndexedValue">&lt;?xml version="1.0" encoding="utf-16"?&gt;&lt;Profile name="Brads Cleanup"&gt;&lt;CSCodeStyleAttributes ArrangeTypeAccessModifier="False" ArrangeTypeMemberAccessModifier="False" SortModifiers="True" RemoveRedundantParentheses="True" AddMissingParentheses="False" ArrangeBraces="False" ArrangeAttributes="True" ArrangeArgumentsStyle="False" ArrangeCodeBodyStyle="False" ArrangeVarStyle="False" ArrangeTrailingCommas="False" /&gt;&lt;CSOptimizeUsings&gt;&lt;OptimizeUsings&gt;True&lt;/OptimizeUsings&gt;&lt;EmbraceInRegion&gt;False&lt;/EmbraceInRegion&gt;&lt;RegionName&gt;&lt;/RegionName&gt;&lt;/CSOptimizeUsings&gt;&lt;CSReformatCode&gt;True&lt;/CSReformatCode&gt;&lt;CSUpdateFileHeader&gt;True&lt;/CSUpdateFileHeader&gt;&lt;RemoveCodeRedundancies&gt;True&lt;/RemoveCodeRedundancies&gt;&lt;CSMakeFieldReadonly&gt;True&lt;/CSMakeFieldReadonly&gt;&lt;CSUseAutoProperty&gt;True&lt;/CSUseAutoProperty&gt;&lt;CSMakeAutoPropertyGetOnly&gt;True&lt;/CSMakeAutoPropertyGetOnly&gt;&lt;CSFixBuiltinTypeReferences&gt;True&lt;/CSFixBuiltinTypeReferences&gt;&lt;CSShortenReferences&gt;True&lt;/CSShortenReferences&gt;&lt;IDEA_SETTINGS&gt;&amp;lt;profile version="1.0"&amp;gt;&#xD;
  &amp;lt;option name="myName" value="Brads Cleanup" /&amp;gt;&#xD;
  &amp;lt;inspection_tool class="ES6ShorthandObjectProperty" enabled="false" level="INFORMATION" enabled_by_default="false" /&amp;gt;&#xD;
  &amp;lt;inspection_tool class="JSArrowFunctionBracesCanBeRemoved" enabled="false" level="INFORMATION" enabled_by_default="false" /&amp;gt;&#xD;
  &amp;lt;inspection_tool class="JSPrimitiveTypeWrapperUsage" enabled="false" level="WARNING" enabled_by_default="false" /&amp;gt;&#xD;
  &amp;lt;inspection_tool class="JSRemoveUnnecessaryParentheses" enabled="false" level="INFORMATION" enabled_by_default="false" /&amp;gt;&#xD;
  &amp;lt;inspection_tool class="JSUnnecessarySemicolon" enabled="false" level="WARNING" enabled_by_default="false" /&amp;gt;&#xD;
  &amp;lt;inspection_tool class="TypeScriptExplicitMemberType" enabled="false" level="INFORMATION" enabled_by_default="false" /&amp;gt;&#xD;
  &amp;lt;inspection_tool class="UnnecessaryContinueJS" enabled="false" level="WARNING" enabled_by_default="false" /&amp;gt;&#xD;
  &amp;lt;inspection_tool class="UnnecessaryLabelJS" enabled="false" level="WARNING" enabled_by_default="false" /&amp;gt;&#xD;
  &amp;lt;inspection_tool class="UnnecessaryLabelOnBreakStatementJS" enabled="false" level="WARNING" enabled_by_default="false" /&amp;gt;&#xD;
  &amp;lt;inspection_tool class="UnnecessaryLabelOnContinueStatementJS" enabled="false" level="WARNING" enabled_by_default="false" /&amp;gt;&#xD;
  &amp;lt;inspection_tool class="UnnecessaryReturnJS" enabled="false" level="WARNING" enabled_by_default="false" /&amp;gt;&#xD;
  &amp;lt;inspection_tool class="WrongPropertyKeyValueDelimiter" enabled="false" level="WEAK WARNING" enabled_by_default="false" /&amp;gt;&#xD;
&amp;lt;/profile&amp;gt;&lt;/IDEA_SETTINGS&gt;&lt;CppReformatCode&gt;True&lt;/CppReformatCode&gt;&lt;HtmlReformatCode&gt;True&lt;/HtmlReformatCode&gt;&lt;VBReformatCode&gt;True&lt;/VBReformatCode&gt;&lt;CSharpFormatDocComments&gt;True&lt;/CSharpFormatDocComments&gt;&lt;CSReorderTypeMembers&gt;True&lt;/CSReorderTypeMembers&gt;&lt;/Profile&gt;</s:String>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/KEEP_BLANK_LINES_IN_CODE/@EntryValue">1</s:Int64>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/MAX_ENUM_MEMBERS_ON_LINE/@EntryValue">20</s:Int64>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_CATCH_ON_NEW_LINE/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_METHOD_ATTRIBUTE_ON_SAME_LINE_EX/@EntryValue">ALWAYS</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_SIMPLE_ENUM_ON_SINGLE_LINE/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_TYPE_ATTRIBUTE_ON_SAME_LINE_EX/@EntryValue">ALWAYS</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_ENUM_DECLARATION/@EntryValue">WRAP_IF_LONG</s:String>
	<s:String x:Key="/Default/CodeStyle/CSharpFileLayoutPatterns/Pattern/@EntryValue">&lt;?xml version="1.0" encoding="utf-16"?&gt;&#xD;
&lt;Patterns xmlns="urn:schemas-jetbrains-com:member-reordering-patterns"&gt;&#xD;
  &lt;TypePattern DisplayName="Non-reorderable types"&gt;&#xD;
    &lt;TypePattern.Match&gt;&#xD;
      &lt;Or&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Interface" /&gt;&#xD;
          &lt;Or&gt;&#xD;
            &lt;HasAttribute Name="System.Runtime.InteropServices.InterfaceTypeAttribute" /&gt;&#xD;
            &lt;HasAttribute Name="System.Runtime.InteropServices.ComImport" /&gt;&#xD;
          &lt;/Or&gt;&#xD;
        &lt;/And&gt;&#xD;
        &lt;Kind Is="Struct" /&gt;&#xD;
        &lt;HasAttribute Name="JetBrains.Annotations.NoReorderAttribute" /&gt;&#xD;
        &lt;HasAttribute Name="JetBrains.Annotations.NoReorder" /&gt;&#xD;
      &lt;/Or&gt;&#xD;
    &lt;/TypePattern.Match&gt;&#xD;
  &lt;/TypePattern&gt;&#xD;
  &lt;TypePattern DisplayName="xUnit.net Test Classes" RemoveRegions="All"&gt;&#xD;
    &lt;TypePattern.Match&gt;&#xD;
      &lt;And&gt;&#xD;
        &lt;Kind Is="Class" /&gt;&#xD;
        &lt;HasMember&gt;&#xD;
          &lt;And&gt;&#xD;
            &lt;Kind Is="Method" /&gt;&#xD;
            &lt;HasAttribute Name="Xunit.FactAttribute" Inherited="True" /&gt;&#xD;
            &lt;HasAttribute Name="Xunit.TheoryAttribute" Inherited="True" /&gt;&#xD;
          &lt;/And&gt;&#xD;
        &lt;/HasMember&gt;&#xD;
      &lt;/And&gt;&#xD;
    &lt;/TypePattern.Match&gt;&#xD;
    &lt;Entry DisplayName="Setup/Teardown Methods"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;Or&gt;&#xD;
          &lt;Kind Is="Constructor" /&gt;&#xD;
          &lt;And&gt;&#xD;
            &lt;Kind Is="Method" /&gt;&#xD;
            &lt;ImplementsInterface Name="System.IDisposable" /&gt;&#xD;
          &lt;/And&gt;&#xD;
        &lt;/Or&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Kind Order="Constructor" /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="All other members" /&gt;&#xD;
    &lt;Entry Priority="100" DisplayName="Test Methods"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Method" /&gt;&#xD;
          &lt;HasAttribute Name="Xunit.FactAttribute" /&gt;&#xD;
          &lt;HasAttribute Name="Xunit.TheoryAttribute" /&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
  &lt;/TypePattern&gt;&#xD;
  &lt;TypePattern DisplayName="NUnit Test Fixtures" RemoveRegions="All"&gt;&#xD;
    &lt;TypePattern.Match&gt;&#xD;
      &lt;And&gt;&#xD;
        &lt;Kind Is="Class" /&gt;&#xD;
        &lt;Or&gt;&#xD;
          &lt;HasAttribute Name="NUnit.Framework.TestFixtureAttribute" Inherited="True" /&gt;&#xD;
          &lt;HasAttribute Name="NUnit.Framework.TestFixtureSourceAttribute" Inherited="True" /&gt;&#xD;
          &lt;HasMember&gt;&#xD;
            &lt;And&gt;&#xD;
              &lt;Kind Is="Method" /&gt;&#xD;
              &lt;HasAttribute Name="NUnit.Framework.TestAttribute" /&gt;&#xD;
              &lt;HasAttribute Name="NUnit.Framework.TestCaseAttribute" /&gt;&#xD;
              &lt;HasAttribute Name="NUnit.Framework.TestCaseSourceAttribute" /&gt;&#xD;
            &lt;/And&gt;&#xD;
          &lt;/HasMember&gt;&#xD;
        &lt;/Or&gt;&#xD;
      &lt;/And&gt;&#xD;
    &lt;/TypePattern.Match&gt;&#xD;
    &lt;Entry DisplayName="Setup/Teardown Methods"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Method" /&gt;&#xD;
          &lt;Or&gt;&#xD;
            &lt;HasAttribute Name="NUnit.Framework.SetUpAttribute" Inherited="True" /&gt;&#xD;
            &lt;HasAttribute Name="NUnit.Framework.TearDownAttribute" Inherited="True" /&gt;&#xD;
            &lt;HasAttribute Name="NUnit.Framework.TestFixtureSetUpAttribute" Inherited="True" /&gt;&#xD;
            &lt;HasAttribute Name="NUnit.Framework.TestFixtureTearDownAttribute" Inherited="True" /&gt;&#xD;
            &lt;HasAttribute Name="NUnit.Framework.OneTimeSetUpAttribute" Inherited="True" /&gt;&#xD;
            &lt;HasAttribute Name="NUnit.Framework.OneTimeTearDownAttribute" Inherited="True" /&gt;&#xD;
          &lt;/Or&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="All other members" /&gt;&#xD;
    &lt;Entry Priority="100" DisplayName="Test Methods"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Method" /&gt;&#xD;
          &lt;HasAttribute Name="NUnit.Framework.TestAttribute" /&gt;&#xD;
          &lt;HasAttribute Name="NUnit.Framework.TestCaseAttribute" /&gt;&#xD;
          &lt;HasAttribute Name="NUnit.Framework.TestCaseSourceAttribute" /&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
  &lt;/TypePattern&gt;&#xD;
  &lt;TypePattern DisplayName="Default Pattern"&gt;&#xD;
    &lt;Entry Priority="100" DisplayName="Public Delegates"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Access Is="Public" /&gt;&#xD;
          &lt;Kind Is="Delegate" /&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry Priority="100" DisplayName="Enums"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Enum" /&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Access Order="Internal Private Public ProtectedInternal" /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Static Fields and Constants"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;Or&gt;&#xD;
          &lt;Kind Is="Constant" /&gt;&#xD;
          &lt;And&gt;&#xD;
            &lt;Kind Is="Field" /&gt;&#xD;
            &lt;Static /&gt;&#xD;
          &lt;/And&gt;&#xD;
        &lt;/Or&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Access Order="Internal Private Public ProtectedInternal" /&gt;&#xD;
        &lt;Static /&gt;&#xD;
        &lt;Kind Order="Constant Field" /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Serialized Data Members"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;HasAttribute Name="System.Runtime.Serialization.DataMember" /&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Access Order="Internal Private Public ProtectedInternal" /&gt;&#xD;
        &lt;Readonly /&gt;&#xD;
        &lt;Static /&gt;&#xD;
        &lt;Override /&gt;&#xD;
        &lt;Abstract /&gt;&#xD;
        &lt;Virtual /&gt;&#xD;
        &lt;Sealed /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Ignore Non Serialized Data Members"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;HasAttribute Name="System.Runtime.Serialization.IgnoreDataMember" /&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Access Order="Internal Private Public ProtectedInternal" /&gt;&#xD;
        &lt;Readonly /&gt;&#xD;
        &lt;Static /&gt;&#xD;
        &lt;Override /&gt;&#xD;
        &lt;Abstract /&gt;&#xD;
        &lt;Virtual /&gt;&#xD;
        &lt;Sealed /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Fields"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Field" /&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Access Order="Internal Private Public ProtectedInternal" /&gt;&#xD;
        &lt;Readonly /&gt;&#xD;
        &lt;Static /&gt;&#xD;
        &lt;Override /&gt;&#xD;
        &lt;Abstract /&gt;&#xD;
        &lt;Virtual /&gt;&#xD;
        &lt;Sealed /&gt;&#xD;
        &lt;Name /&gt;&#xD;
        &lt;Type /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Properties, Indexers"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;Or&gt;&#xD;
          &lt;Kind Is="Property" /&gt;&#xD;
          &lt;Kind Is="Indexer" /&gt;&#xD;
        &lt;/Or&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Access Order="Internal Private Public ProtectedInternal" /&gt;&#xD;
        &lt;Static /&gt;&#xD;
        &lt;Override /&gt;&#xD;
        &lt;Abstract /&gt;&#xD;
        &lt;Virtual /&gt;&#xD;
        &lt;Sealed /&gt;&#xD;
        &lt;Name /&gt;&#xD;
        &lt;Type /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Constructors"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;Kind Is="Constructor" /&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Access Order="Internal Private Public ProtectedInternal" /&gt;&#xD;
        &lt;Static /&gt;&#xD;
        &lt;Override /&gt;&#xD;
        &lt;Abstract /&gt;&#xD;
        &lt;Virtual /&gt;&#xD;
        &lt;Sealed /&gt;&#xD;
        &lt;Type /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Serialization Methods"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;Or&gt;&#xD;
          &lt;HasAttribute Name="System.Runtime.Serialization.OnDeserialized" /&gt;&#xD;
          &lt;HasAttribute Name="System.Runtime.Serialization.OnDeserializing" /&gt;&#xD;
          &lt;HasAttribute Name="System.Runtime.Serialization.OnSerializing" /&gt;&#xD;
          &lt;HasAttribute Name="System.Runtime.Serialization.OnSerialized" /&gt;&#xD;
        &lt;/Or&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Access Order="Internal Private Public ProtectedInternal" /&gt;&#xD;
        &lt;Readonly /&gt;&#xD;
        &lt;Static /&gt;&#xD;
        &lt;Override /&gt;&#xD;
        &lt;Abstract /&gt;&#xD;
        &lt;Virtual /&gt;&#xD;
        &lt;Sealed /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Methods"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;Kind Is="Method" /&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Access Order="Internal Private Public ProtectedInternal" /&gt;&#xD;
        &lt;Static /&gt;&#xD;
        &lt;Override /&gt;&#xD;
        &lt;Abstract /&gt;&#xD;
        &lt;Virtual /&gt;&#xD;
        &lt;Sealed /&gt;&#xD;
        &lt;Name /&gt;&#xD;
        &lt;Type /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry Priority="100" DisplayName="Interface Implementations"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Member" /&gt;&#xD;
          &lt;ImplementsInterface /&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;ImplementsInterface Immediate="True" /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="All other members" /&gt;&#xD;
    &lt;Entry DisplayName="Nested Types"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;Kind Is="Type" /&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
    &lt;/Entry&gt;&#xD;
  &lt;/TypePattern&gt;&#xD;
&lt;/Patterns&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/Abbreviations/=XTILES/@EntryIndexedValue">XTILES</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/Abbreviations/=XY/@EntryIndexedValue">XY</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/Abbreviations/=XYZ/@EntryIndexedValue">XYZ</s:String>
	<s:String x:Key="/Default/CustomTools/CustomToolsData/@EntryValue"></s:String>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ECSharpKeepExistingMigration/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ECSharpPlaceEmbeddedOnSameLineMigration/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ECSharpUseContinuousIndentInsideBracesMigration/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ESettingsUpgrade_002EAlwaysTreatStructAsNotReorderableMigration/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ESettingsUpgrade_002EMigrateBlankLinesAroundFieldToBlankLinesAroundProperty/@EntryIndexedValue">True</s:Boolean>
	<s:String x:Key="/Default/Environment/UnitTesting/NUnitProvider/TestParameters/@EntryValue">DataDirectory=F:\\GitHub\\Ultima5ReduxTestDependancies\\Ultima5ReduxTestDependancies\\DataFiles;SaveRootDirectory=F:\\GitHub\\Ultima5ReduxTestDependancies\\Ultima5ReduxTestDependancies\\Saves</s:String>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=adjacencies/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=argh/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Attackable/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=bagillion/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=bajh/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Blackthorne_0027s/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Boardable/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=bools/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=BOOOM/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=bradhannah/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=British_0027s/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Buriable/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=bytelist/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=castable/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=cbt_0027s/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=COORD/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=CORPSER/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=COULDNT/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=COULDST/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=datachunk/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=datachunks/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Delwyn/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=DERP/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Destard/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=enterable/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=equipable/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Equippable/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=ETTIN/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=ETTINS/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=FELUCCA/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=FFFF/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=FFFFFF/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=frigat/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=HEADLESSES/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=hitpoints/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Hythloth/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=ISALIVE/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=ISDEAD/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=ISMET/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Isnt/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Jhelom/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Kazam/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Klimable/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Klimb/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=klimbable/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=klimbing/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Leadup/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=limbing/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=mapunit/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Minoc/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=MONGBAT/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=MONGBATS/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=moongate/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Moongates/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Moonglow/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=NBYTES/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=NOFILE/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=NPCFILE/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=NPCS/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Openable/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=oppr/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Overable/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Overworld/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Quas/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=reindexed/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=ROTWORMS/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Sanct/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=sandlewood/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=scancodes/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=SCRIPTLINE/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Sellable/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=shadowlord/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=shoppekeeper/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Simplon/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Skara/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=smallmap/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=spektran/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=SPIETH/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Teleport/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Tileset/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=towne/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Trinsic/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Ultima/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=UNBOARD/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Unboarded/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Unequip/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Unequips/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=wanderable/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=welp/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=What_0027ll/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=XTILES/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=XXXXX/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Ylem/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=YTILES/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=ZZZZZ/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=ZZZZZZ/@EntryIndexedValue">True</s:Boolean></wpf:ResourceDictionary>